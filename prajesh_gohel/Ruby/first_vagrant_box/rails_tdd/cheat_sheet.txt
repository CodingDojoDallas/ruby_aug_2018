~~~ All RSpec methods ~~~

require "rspec"
RSpec.describe do
    it "cheat sheet" do
        expect(true).to be_truthy
        expect(false).to be_falsey
        expect("string").to eq("string")
        expect("string").to_not eq("not")
        expect(<valid_instance>).to be_valid
        expect(<invalid_instance>).to be_invalid
    end
end

~~~ All Capybara Methods ~~~

require 'rails_helper'
feature "cheat sheet" do
  scenario "navigation" do
    visit new_user_path
    visit "/users/new"
    visit user_path(user_instance) #for show page
  end
  scenario "clicking" do
    click_button "id-of-button or text-of-button"
    click_link "id-of-link or text-of-button"
    click "id-or-text-of-button-or-link"
  end
  scenario "filling our forms" do
    fill_in "id-or-name-of-input", with: "oscar"
    choose "id-or-name-of-radio-button"
    check "id-or-name-of-checkbox"
    select('Option', :from => 'Select Box')
    click_button "id-or-value-of-submit-button"
  end
  scenario "expectation" do
    expect(page).to have_content "content on page"
    expect(page).to_not have_content "content shouldn't be on page"
    expect(current_path).to eq("/expected/path")
  end
end
